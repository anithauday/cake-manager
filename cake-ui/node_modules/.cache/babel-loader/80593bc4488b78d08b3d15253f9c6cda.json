{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../../Constants';\nimport { parseJwt } from './Helpers';\nexport const cakeApi = {\n  authenticate,\n  numberOfUsers,\n  numberOfOrders,\n  getUsers,\n  deleteUser,\n  getOrders,\n  deleteOrder,\n  createOrder,\n  getUserMe\n};\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/login', {\n    username,\n    password\n  }, {\n    headers: {\n      'Content-type': 'application/json',\n      \"Access-Control-Allow-Origin\": \"*\"\n    }\n  });\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers');\n}\n\nfunction numberOfOrders() {\n  return instance.get('/public/numberOfOrders');\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users';\n  return instance.get(url, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction getOrders(user, text) {\n  const url = text ? `/api/orders?text=${text}` : '/api/orders';\n  return instance.get(url, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction deleteOrder(user, orderId) {\n  return instance.delete(`/api/orders/${orderId}`, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction createOrder(user, order) {\n  return instance.post('/api/orders', order, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction getUserMe(user) {\n  return instance.get('/api/users/me', {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n} // -- Axios\n\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n});\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1];\n    const data = parseJwt(token);\n\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\";\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // -- Helper functions\n\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`;\n}","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/misc/CakeApi.js"],"names":["axios","config","parseJwt","cakeApi","authenticate","numberOfUsers","numberOfOrders","getUsers","deleteUser","getOrders","deleteOrder","createOrder","getUserMe","username","password","instance","post","headers","signup","user","get","url","bearerAuth","delete","text","orderId","order","create","baseURL","API_BASE_URL","interceptors","request","use","Authorization","token","split","data","Date","now","exp","window","location","href","error","Promise","reject","accessToken"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { config } from '../../Constants'\nimport { parseJwt } from './Helpers'\n\nexport const cakeApi = {\n  authenticate,\n  numberOfUsers,\n  numberOfOrders,\n  getUsers,\n  deleteUser,\n  getOrders,\n  deleteOrder,\n  createOrder,\n  getUserMe\n}\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/login', { username, password }, {\n    headers: { 'Content-type': 'application/json' , \"Access-Control-Allow-Origin\": \"*\"}\n  })\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers')\n}\n\nfunction numberOfOrders() {\n  return instance.get('/public/numberOfOrders')\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction getOrders(user, text) {\n  const url = text ? `/api/orders?text=${text}` : '/api/orders'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteOrder(user, orderId) {\n  return instance.delete(`/api/orders/${orderId}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction createOrder(user, order) {\n  return instance.post('/api/orders', order, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': bearerAuth(user)\n    }\n  })\n}\n\nfunction getUserMe(user) {\n  return instance.get('/api/users/me', {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\n// -- Axios\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n})\n\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1]\n    const data = parseJwt(token)\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\"\n    }\n  }\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n// -- Helper functions\n\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`\n}"]},"metadata":{},"sourceType":"module"}