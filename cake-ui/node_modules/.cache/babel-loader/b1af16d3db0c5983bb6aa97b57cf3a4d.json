{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/admin/AdminPage.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport AuthContext from '../context/AuthContext';\nimport { orderApi } from '../misc/OrderApi';\nimport AdminTab from './AdminTab';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AdminPage extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      orders: [],\n      orderDescription: '',\n      orderTextSearch: '',\n      userUsernameSearch: '',\n      isAdmin: true,\n      isUsersLoading: false,\n      isOrdersLoading: false\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleGetUsers = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isUsersLoading: true\n      });\n      orderApi.getUsers(user).then(response => {\n        this.setState({\n          users: response.data\n        });\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isUsersLoading: false\n        });\n      });\n    };\n\n    this.handleDeleteUser = username => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      orderApi.deleteUser(user, username).then(() => {\n        this.handleGetUsers();\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n\n    this.handleSearchUser = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      const username = this.state.userUsernameSearch;\n      orderApi.getUsers(user, username).then(response => {\n        const data = response.data;\n        const users = data instanceof Array ? data : [data];\n        this.setState({\n          users\n        });\n      }).catch(error => {\n        handleLogError(error);\n        this.setState({\n          users: []\n        });\n      });\n    };\n\n    this.handleGetOrders = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isOrdersLoading: true\n      });\n      orderApi.getOrders(user).then(response => {\n        this.setState({\n          orders: response.data\n        });\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isOrdersLoading: false\n        });\n      });\n    };\n\n    this.handleDeleteOrder = isbn => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      orderApi.deleteOrder(user, isbn).then(() => {\n        this.handleGetOrders();\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n\n    this.handleCreateOrder = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      let {\n        orderDescription\n      } = this.state;\n      orderDescription = orderDescription.trim();\n\n      if (!orderDescription) {\n        return;\n      }\n\n      const order = {\n        description: orderDescription\n      };\n      orderApi.createOrder(user, order).then(() => {\n        this.handleGetOrders();\n        this.setState({\n          orderDescription: ''\n        });\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n\n    this.handleSearchOrder = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      const text = this.state.orderTextSearch;\n      orderApi.getOrders(user, text).then(response => {\n        const orders = response.data;\n        this.setState({\n          orders\n        });\n      }).catch(error => {\n        handleLogError(error);\n        this.setState({\n          orders: []\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    const Auth = this.context;\n    const user = Auth.getUser();\n    const isAdmin = user.data.rol[0] === 'ADMIN';\n    this.setState({\n      isAdmin\n    });\n    this.handleGetUsers();\n    this.handleGetOrders();\n  }\n\n  render() {\n    if (!this.state.isAdmin) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 14\n      }, this);\n    } else {\n      const {\n        isUsersLoading,\n        users,\n        userUsernameSearch,\n        isOrdersLoading,\n        orders,\n        orderDescription,\n        orderTextSearch\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(AdminTab, {\n          isUsersLoading: isUsersLoading,\n          users: users,\n          userUsernameSearch: userUsernameSearch,\n          handleDeleteUser: this.handleDeleteUser,\n          handleSearchUser: this.handleSearchUser,\n          isOrdersLoading: isOrdersLoading,\n          orders: orders,\n          orderDescription: orderDescription,\n          orderTextSearch: orderTextSearch,\n          handleCreateOrder: this.handleCreateOrder,\n          handleDeleteOrder: this.handleDeleteOrder,\n          handleSearchOrder: this.handleSearchOrder,\n          handleInputChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nAdminPage.contextType = AuthContext;\nexport default AdminPage;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/admin/AdminPage.js"],"names":["React","Component","Redirect","Container","AuthContext","orderApi","AdminTab","handleLogError","AdminPage","state","users","orders","orderDescription","orderTextSearch","userUsernameSearch","isAdmin","isUsersLoading","isOrdersLoading","handleInputChange","e","name","value","setState","handleGetUsers","Auth","context","user","getUser","getUsers","then","response","data","catch","error","finally","handleDeleteUser","username","deleteUser","handleSearchUser","Array","handleGetOrders","getOrders","handleDeleteOrder","isbn","deleteOrder","handleCreateOrder","trim","order","description","createOrder","handleSearchOrder","text","componentDidMount","rol","render","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport AuthContext from '../context/AuthContext'\nimport { orderApi } from '../misc/OrderApi'\nimport AdminTab from './AdminTab'\nimport { handleLogError } from '../misc/Helpers'\n\nclass AdminPage extends Component {\n  static contextType = AuthContext\n\n  state = {\n    users: [],\n    orders: [],\n    orderDescription: '',\n    orderTextSearch: '',\n    userUsernameSearch: '',\n    isAdmin: true,\n    isUsersLoading: false,\n    isOrdersLoading: false,\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const user = Auth.getUser()\n    const isAdmin = user.data.rol[0] === 'ADMIN'\n    this.setState({ isAdmin })\n\n    this.handleGetUsers()\n    this.handleGetOrders()\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleGetUsers = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    this.setState({ isUsersLoading: true })\n    orderApi.getUsers(user)\n      .then(response => {\n        this.setState({ users: response.data })\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n      .finally(() => {\n        this.setState({ isUsersLoading: false })\n      })\n  }\n\n  handleDeleteUser = (username) => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    orderApi.deleteUser(user, username)\n      .then(() => {\n        this.handleGetUsers()\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n  }\n\n  handleSearchUser = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    const username = this.state.userUsernameSearch\n    orderApi.getUsers(user, username)\n      .then(response => {\n        const data = response.data\n        const users = data instanceof Array ? data : [data]\n        this.setState({ users })\n      })\n      .catch(error => {\n        handleLogError(error)\n        this.setState({ users: [] })\n      })\n  }\n\n  handleGetOrders = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    this.setState({ isOrdersLoading: true })\n    orderApi.getOrders(user)\n      .then(response => {\n        this.setState({ orders: response.data })\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n      .finally(() => {\n        this.setState({ isOrdersLoading: false })\n      })\n  }\n\n  handleDeleteOrder = (isbn) => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    orderApi.deleteOrder(user, isbn)\n      .then(() => {\n        this.handleGetOrders()\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n  }\n\n  handleCreateOrder = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    let { orderDescription } = this.state\n    orderDescription = orderDescription.trim()\n    if (!orderDescription) {\n      return\n    }\n\n    const order = { description: orderDescription }\n    orderApi.createOrder(user, order)\n      .then(() => {\n        this.handleGetOrders()\n        this.setState({ orderDescription: '' })\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n  }\n\n  handleSearchOrder = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    const text = this.state.orderTextSearch\n    orderApi.getOrders(user, text)\n      .then(response => {\n        const orders = response.data\n        this.setState({ orders })\n      })\n      .catch(error => {\n        handleLogError(error)\n        this.setState({ orders: [] })\n      })\n  }\n\n  render() {\n    if (!this.state.isAdmin) {\n      return <Redirect to='/' />\n    } else {\n      const { isUsersLoading, users, userUsernameSearch, isOrdersLoading, orders, orderDescription, orderTextSearch } = this.state\n      return (\n        <Container>\n          <AdminTab\n            isUsersLoading={isUsersLoading}\n            users={users}\n            userUsernameSearch={userUsernameSearch}\n            handleDeleteUser={this.handleDeleteUser}\n            handleSearchUser={this.handleSearchUser}\n            isOrdersLoading={isOrdersLoading}\n            orders={orders}\n            orderDescription={orderDescription}\n            orderTextSearch={orderTextSearch}\n            handleCreateOrder={this.handleCreateOrder}\n            handleDeleteOrder={this.handleDeleteOrder}\n            handleSearchOrder={this.handleSearchOrder}\n            handleInputChange={this.handleInputChange}\n          />\n        </Container>\n      )\n    }\n  }\n}\n\nexport default AdminPage"]},"metadata":{},"sourceType":"module"}