{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Signup.js\";\nimport React, { Component } from 'react';\nimport { NavLink, Redirect } from 'react-router-dom';\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react';\nimport AuthContext from '../context/AuthContext';\nimport { cakeApi } from '../misc/CakeApi';\nimport { parseJwt, handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Signup extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      name: '',\n      email: '',\n      isLoggedIn: false,\n      isError: false,\n      errorMessage: ''\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const {\n        username,\n        password,\n        name,\n        email\n      } = this.state;\n\n      if (!(username && password && name && email)) {\n        this.setState({\n          isError: true,\n          errorMessage: 'Please, inform all fields!'\n        });\n        return;\n      }\n\n      const user = {\n        username,\n        password,\n        name,\n        email\n      };\n      cakeApi.signup(user).then(response => {\n        const {\n          accessToken\n        } = response.data;\n        const data = parseJwt(accessToken);\n        const user = {\n          data,\n          accessToken\n        };\n        const Auth = this.context;\n        Auth.userLogin(user);\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        });\n      }).catch(error => {\n        handleLogError(error);\n\n        if (error.response && error.response.data) {\n          const errorData = error.response.data;\n          let errorMessage = 'Invalid fields';\n\n          if (errorData.status === 409) {\n            errorMessage = errorData.message;\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage;\n          }\n\n          this.setState({\n            isError: true,\n            errorMessage\n          });\n        }\n      });\n    };\n  }\n\n  componentDidMount() {\n    const Auth = this.context;\n    const isLoggedIn = Auth.userIsAuthenticated();\n    this.setState({\n      isLoggedIn\n    });\n  }\n\n  render() {\n    const {\n      isLoggedIn,\n      isError,\n      errorMessage\n    } = this.state;\n\n    if (isLoggedIn) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 14\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        textAlign: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          style: {\n            maxWidth: 450\n          },\n          children: [/*#__PURE__*/_jsxDEV(Form, {\n            size: \"large\",\n            onSubmit: this.handleSubmit,\n            children: /*#__PURE__*/_jsxDEV(Segment, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                autoFocus: true,\n                name: \"username\",\n                icon: \"user\",\n                iconPosition: \"left\",\n                placeholder: \"Username\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                name: \"password\",\n                icon: \"lock\",\n                iconPosition: \"left\",\n                placeholder: \"Password\",\n                type: \"password\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                name: \"name\",\n                icon: \"address card\",\n                iconPosition: \"left\",\n                placeholder: \"Name\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n                fluid: true,\n                name: \"email\",\n                icon: \"at\",\n                iconPosition: \"left\",\n                placeholder: \"Email\",\n                onChange: this.handleInputChange\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                color: \"violet\",\n                fluid: true,\n                size: \"large\",\n                children: \"Signup\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Message, {\n            children: [`Already have an account? `, /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"/login\",\n              color: \"violet\",\n              as: NavLink,\n              to: \"/login\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), isError && /*#__PURE__*/_jsxDEV(Message, {\n            negative: true,\n            children: errorMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nSignup.contextType = AuthContext;\nexport default Signup;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Signup.js"],"names":["React","Component","NavLink","Redirect","Button","Form","Grid","Segment","Message","AuthContext","cakeApi","parseJwt","handleLogError","Signup","state","username","password","name","email","isLoggedIn","isError","errorMessage","handleInputChange","e","value","setState","handleSubmit","preventDefault","user","signup","then","response","accessToken","data","Auth","context","userLogin","catch","error","errorData","status","message","errors","defaultMessage","componentDidMount","userIsAuthenticated","render","maxWidth","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../context/AuthContext'\nimport { cakeApi } from '../misc/CakeApi'\nimport { parseJwt, handleLogError } from '../misc/Helpers'\n\nclass Signup extends Component {\n  static contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password, name, email } = this.state\n    if (!(username && password && name && email)) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Please, inform all fields!'\n      })\n      return\n    }\n\n    const user = { username, password, name, email }\n    cakeApi.signup(user)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        if (error.response && error.response.data) {\n          const errorData = error.response.data\n          let errorMessage = 'Invalid fields'\n          if (errorData.status === 409) {\n            errorMessage = errorData.message\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage\n          }\n          this.setState({\n            isError: true,\n            errorMessage\n          })\n        }\n      })\n  }\n\n  render() {\n    const { isLoggedIn, isError, errorMessage } = this.state\n    if (isLoggedIn) {\n      return <Redirect to='/' />\n    } else {\n      return (\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <Segment>\n                <Form.Input\n                  fluid\n                  autoFocus\n                  name='username'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='name'\n                  icon='address card'\n                  iconPosition='left'\n                  placeholder='Name'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='email'\n                  icon='at'\n                  iconPosition='left'\n                  placeholder='Email'\n                  onChange={this.handleInputChange}\n                />\n                <Button color='violet' fluid size='large'>Signup</Button>\n              </Segment>\n            </Form>\n            <Message>{`Already have an account? `}\n              <a href='/login' color='violet' as={NavLink} to=\"/login\">Login</a>\n            </Message>\n            {isError && <Message negative>{errorMessage}</Message>}\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}