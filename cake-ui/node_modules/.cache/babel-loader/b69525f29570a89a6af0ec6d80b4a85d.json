{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport OrderTable from './OrderTable';\nimport AuthContext from '../context/AuthContext';\nimport { cakeApi } from '../misc/CakeApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddCake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userMe: null,\n      isUser: true,\n      isLoading: false,\n      orderDescription: ''\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleGetUserMe = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isLoading: true\n      });\n      cakeApi.getUserMe(user).then(response => {\n        this.setState({\n          userMe: response.data\n        });\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleCreateOrder = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      let {\n        orderDescription\n      } = this.state;\n      orderDescription = orderDescription.trim();\n\n      if (!orderDescription) {\n        return;\n      }\n\n      const order = {\n        description: orderDescription\n      };\n      cakeApi.createOrder(user, order).then(() => {\n        this.handleGetUserMe();\n        this.setState({\n          orderDescription: ''\n        });\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const Auth = this.context;\n    const user = Auth.getUser();\n    const isUser = user.data.rol[0] === 'USER';\n    this.setState({\n      isUser\n    });\n    this.handleGetUserMe();\n  }\n\n  render() {\n    if (!this.state.isUser) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 14\n      }, this);\n    } else {\n      const {\n        userMe,\n        isLoading,\n        orderDescription\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(OrderTable, {\n          orders: userMe && userMe.orders,\n          isLoading: isLoading,\n          orderDescription: orderDescription,\n          handleCreateOrder: this.handleCreateOrder,\n          handleInputChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nAddCake.contextType = AuthContext;\nexport default AddCake;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js"],"names":["React","Component","Redirect","Container","OrderTable","AuthContext","cakeApi","handleLogError","AddCake","state","userMe","isUser","isLoading","orderDescription","handleInputChange","e","name","value","setState","handleGetUserMe","Auth","context","user","getUser","getUserMe","then","response","data","catch","error","finally","handleCreateOrder","trim","order","description","createOrder","componentDidMount","rol","render","orders","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { Container } from 'semantic-ui-react'\nimport OrderTable from './OrderTable'\nimport AuthContext from '../context/AuthContext'\nimport { cakeApi } from '../misc/CakeApi'\nimport { handleLogError } from '../misc/Helpers'\n\nclass AddCake extends Component {\n  static contextType = AuthContext\n\n  state = {\n    userMe: null,\n    isUser: true,\n    isLoading: false,\n    orderDescription: ''\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const user = Auth.getUser()\n    const isUser = user.data.rol[0] === 'USER'\n    this.setState({ isUser })\n\n    this.handleGetUserMe()\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleGetUserMe = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    this.setState({ isLoading: true })\n    cakeApi.getUserMe(user)\n      .then(response => {\n        this.setState({ userMe: response.data })\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n      .finally(() => {\n        this.setState({ isLoading: false })\n      })\n  }\n  \n  handleCreateOrder = () => {\n    const Auth = this.context\n    const user = Auth.getUser()\n\n    let { orderDescription } = this.state\n    orderDescription = orderDescription.trim()\n    if (!orderDescription) {\n      return\n    }\n\n    const order = { description: orderDescription }\n    cakeApi.createOrder(user, order)\n      .then(() => {\n        this.handleGetUserMe()\n        this.setState({ orderDescription: '' })\n      })\n      .catch(error => {\n        handleLogError(error)\n      })\n  }\n\n  render() {\n    if (!this.state.isUser) {\n      return <Redirect to='/' />\n    } else {\n      const { userMe, isLoading, orderDescription } = this.state\n      return (\n        <Container>\n          <OrderTable\n            orders={userMe && userMe.orders}\n            isLoading={isLoading}\n            orderDescription={orderDescription}\n            handleCreateOrder={this.handleCreateOrder}\n            handleInputChange={this.handleInputChange}\n          />\n        </Container>\n      )\n    }\n  }\n}\n\nexport default AddCake"]},"metadata":{},"sourceType":"module"}