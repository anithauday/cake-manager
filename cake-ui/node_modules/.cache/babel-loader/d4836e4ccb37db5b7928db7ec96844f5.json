{"ast":null,"code":"import React from'react';import{Grid,Table,Header,Icon}from'semantic-ui-react';import OrderForm from'../misc/OrderForm';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function OrderTable(_ref){var orders=_ref.orders,orderDescription=_ref.orderDescription,handleInputChange=_ref.handleInputChange,handleCreateOrder=_ref.handleCreateOrder;var orderList;if(!orders||orders.length===0){orderList=/*#__PURE__*/_jsx(Table.Row,{children:/*#__PURE__*/_jsx(Table.Cell,{collapsing:true,textAlign:\"center\",colSpan:\"3\",children:\"No order\"})},'no-order');}else{orderList=orders.map(function(order){return/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.Cell,{children:order.id}),/*#__PURE__*/_jsx(Table.Cell,{children:order.createdAt}),/*#__PURE__*/_jsx(Table.Cell,{children:order.description})]},order.id);});}return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Grid,{stackable:true,divided:true,children:/*#__PURE__*/_jsxs(Grid.Row,{columns:\"2\",children:[/*#__PURE__*/_jsx(Grid.Column,{width:\"3\",children:/*#__PURE__*/_jsxs(Header,{as:\"h2\",children:[/*#__PURE__*/_jsx(Icon,{name:\"laptop\"}),/*#__PURE__*/_jsx(Header.Content,{children:\"Orders\"})]})}),/*#__PURE__*/_jsx(Grid.Column,{children:/*#__PURE__*/_jsx(OrderForm,{orderDescription:orderDescription,handleInputChange:handleInputChange,handleCreateOrder:handleCreateOrder})})]})}),/*#__PURE__*/_jsxs(Table,{compact:true,striped:true,children:[/*#__PURE__*/_jsx(Table.Header,{children:/*#__PURE__*/_jsxs(Table.Row,{children:[/*#__PURE__*/_jsx(Table.HeaderCell,{width:5,children:\"ID\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{width:5,children:\"Created At\"}),/*#__PURE__*/_jsx(Table.HeaderCell,{width:6,children:\"Description\"})]})}),/*#__PURE__*/_jsx(Table.Body,{children:orderList})]})]});}export default OrderTable;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/OrderTable.js"],"names":["React","Grid","Table","Header","Icon","OrderForm","OrderTable","orders","orderDescription","handleInputChange","handleCreateOrder","orderList","length","map","order","id","createdAt","description"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,IAAT,CAAeC,KAAf,CAAsBC,MAAtB,CAA8BC,IAA9B,KAA0C,mBAA1C,CACA,MAAOC,CAAAA,SAAP,KAAsB,mBAAtB,C,6IAEA,QAASC,CAAAA,UAAT,MAAwF,IAAlEC,CAAAA,MAAkE,MAAlEA,MAAkE,CAA1DC,gBAA0D,MAA1DA,gBAA0D,CAAxCC,iBAAwC,MAAxCA,iBAAwC,CAArBC,iBAAqB,MAArBA,iBAAqB,CACtF,GAAIC,CAAAA,SAAJ,CACA,GAAI,CAACJ,MAAD,EAAWA,MAAM,CAACK,MAAP,GAAkB,CAAjC,CAAoC,CAClCD,SAAS,cACP,KAAC,KAAD,CAAO,GAAP,wBACE,KAAC,KAAD,CAAO,IAAP,EAAY,UAAU,KAAtB,CAAuB,SAAS,CAAC,QAAjC,CAA0C,OAAO,CAAC,GAAlD,sBADF,EAAe,UAAf,CADF,CAKD,CAND,IAMO,CACLA,SAAS,CAAGJ,MAAM,CAACM,GAAP,CAAW,SAAAC,KAAK,CAAI,CAC9B,mBACE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,IAAP,WAAaA,KAAK,CAACC,EAAnB,EADF,cAEE,KAAC,KAAD,CAAO,IAAP,WAAaD,KAAK,CAACE,SAAnB,EAFF,cAGE,KAAC,KAAD,CAAO,IAAP,WAAaF,KAAK,CAACG,WAAnB,EAHF,GAAgBH,KAAK,CAACC,EAAtB,CADF,CAOD,CARW,CAAZ,CASD,CAED,mBACE,wCACE,KAAC,IAAD,EAAM,SAAS,KAAf,CAAgB,OAAO,KAAvB,uBACE,MAAC,IAAD,CAAM,GAAN,EAAU,OAAO,CAAC,GAAlB,wBACE,KAAC,IAAD,CAAM,MAAN,EAAa,KAAK,CAAC,GAAnB,uBACE,MAAC,MAAD,EAAQ,EAAE,CAAC,IAAX,wBACE,KAAC,IAAD,EAAM,IAAI,CAAC,QAAX,EADF,cAEE,KAAC,MAAD,CAAQ,OAAR,qBAFF,GADF,EADF,cAOE,KAAC,IAAD,CAAM,MAAN,wBACE,KAAC,SAAD,EACE,gBAAgB,CAAEP,gBADpB,CAEE,iBAAiB,CAAEC,iBAFrB,CAGE,iBAAiB,CAAEC,iBAHrB,EADF,EAPF,GADF,EADF,cAmBE,MAAC,KAAD,EAAO,OAAO,KAAd,CAAe,OAAO,KAAtB,wBACE,KAAC,KAAD,CAAO,MAAP,wBACE,MAAC,KAAD,CAAO,GAAP,yBACE,KAAC,KAAD,CAAO,UAAP,EAAkB,KAAK,CAAE,CAAzB,gBADF,cAEE,KAAC,KAAD,CAAO,UAAP,EAAkB,KAAK,CAAE,CAAzB,wBAFF,cAGE,KAAC,KAAD,CAAO,UAAP,EAAkB,KAAK,CAAE,CAAzB,yBAHF,GADF,EADF,cAQE,KAAC,KAAD,CAAO,IAAP,WACGC,SADH,EARF,GAnBF,GADF,CAkCD,CAED,cAAeL,CAAAA,UAAf","sourcesContent":["import React from 'react'\nimport { Grid, Table, Header, Icon } from 'semantic-ui-react'\nimport OrderForm from '../misc/OrderForm'\n\nfunction OrderTable({ orders, orderDescription, handleInputChange, handleCreateOrder }) {\n  let orderList\n  if (!orders || orders.length === 0) {\n    orderList = (\n      <Table.Row key='no-order'>\n        <Table.Cell collapsing textAlign='center' colSpan='3'>No order</Table.Cell>\n      </Table.Row>\n    )\n  } else {\n    orderList = orders.map(order => {\n      return (\n        <Table.Row key={order.id}>\n          <Table.Cell>{order.id}</Table.Cell>\n          <Table.Cell>{order.createdAt}</Table.Cell>\n          <Table.Cell>{order.description}</Table.Cell>\n        </Table.Row>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Grid stackable divided>\n        <Grid.Row columns='2'>\n          <Grid.Column width='3'>\n            <Header as='h2'>\n              <Icon name='laptop' />\n              <Header.Content>Orders</Header.Content>\n            </Header>\n          </Grid.Column>\n          <Grid.Column>\n            <OrderForm\n              orderDescription={orderDescription}\n              handleInputChange={handleInputChange}\n              handleCreateOrder={handleCreateOrder}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n\n      <Table compact striped>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell width={5}>ID</Table.HeaderCell>\n            <Table.HeaderCell width={5}>Created At</Table.HeaderCell>\n            <Table.HeaderCell width={6}>Description</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {orderList}\n        </Table.Body>\n      </Table>\n    </>\n  )\n}\n\nexport default OrderTable"]},"metadata":{},"sourceType":"module"}