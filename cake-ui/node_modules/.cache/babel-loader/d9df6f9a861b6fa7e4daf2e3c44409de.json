{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport OrderTable from './OrderTable';\nimport AuthContext from '../context/AuthContext';\nimport { cakeApi } from '../misc/CakeApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddCake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userMe: null,\n      isUser: true,\n      isLoading: false,\n      cakeDescription: '',\n      image: '',\n      title: ''\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleGetCakes = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isLoading: true\n      });\n      cakeApi.getCakes(user).then(response => {\n        this.setState({\n          userMe: response\n        });\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleCreateCake = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      let {\n        cakeDescription\n      } = this.state;\n      let {\n        image\n      } = this.state;\n      let {\n        title\n      } = this.state;\n      cakeDescription = cakeDescription.trim();\n      image = image.trim();\n      title = title.trim();\n      const cake = {\n        description: cakeDescription,\n        image: image,\n        title: title\n      };\n      cakeApi.createCake(user, cake).then(() => {\n        this.handleGetCakes();\n        this.setState({\n          cakeDescription: '',\n          title: '',\n          image: ''\n        });\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const Auth = this.context;\n    const user = Auth.getUser();\n    const isUser = user.data.rol[0] === 'USER';\n    this.setState({\n      isUser\n    });\n  }\n\n  render() {\n    const {\n      userMe,\n      isLoading,\n      cakeDescription\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(OrderTable, {\n        orders: userMe && userMe.orders,\n        isLoading: isLoading,\n        cakeDescription: cakeDescription,\n        handleCreateCake: this.handleCreateCake,\n        handleInputChange: this.handleInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nAddCake.contextType = AuthContext;\nexport default AddCake;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js"],"names":["React","Component","Redirect","Container","OrderTable","AuthContext","cakeApi","handleLogError","AddCake","state","userMe","isUser","isLoading","cakeDescription","image","title","handleInputChange","e","name","value","setState","handleGetCakes","Auth","context","user","getUser","getCakes","then","response","catch","error","finally","handleCreateCake","trim","cake","description","createCake","componentDidMount","data","rol","render","orders","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {Container} from 'semantic-ui-react'\nimport OrderTable from './OrderTable'\nimport AuthContext from '../context/AuthContext'\nimport {cakeApi} from '../misc/CakeApi'\nimport {handleLogError} from '../misc/Helpers'\n\nclass AddCake extends Component {\n    static contextType = AuthContext\n\n    state = {\n        userMe: null,\n        isUser: true,\n        isLoading: false,\n        cakeDescription: '',\n        image: '',\n        title: ''\n    }\n\n    componentDidMount() {\n        const Auth = this.context\n        const user = Auth.getUser()\n        const isUser = user.data.rol[0] === 'USER'\n        this.setState({isUser})\n\n    }\n\n    handleInputChange = (e, {name, value}) => {\n        this.setState({[name]: value})\n    }\n\n    handleGetCakes = () => {\n        const Auth = this.context\n        const user = Auth.getUser()\n\n        this.setState({isLoading: true})\n        cakeApi.getCakes(user)\n            .then(response => {\n                this.setState({userMe: response})\n            })\n            .catch(error => {\n                handleLogError(error)\n            })\n            .finally(() => {\n                this.setState({isLoading: false})\n            })\n    }\n    handleCreateCake = () => {\n        const Auth = this.context\n        const user = Auth.getUser()\n\n        let {cakeDescription} = this.state\n        let {image} = this.state\n        let {title} = this.state\n\n        cakeDescription = cakeDescription.trim()\n        image = image.trim()\n        title = title.trim()\n\n        const cake = {description: cakeDescription, image: image, title: title}\n        cakeApi.createCake(user, cake)\n            .then(() => {\n                this.handleGetCakes()\n                this.setState({cakeDescription: '', title: '', image: ''})\n            })\n            .catch(error => {\n                handleLogError(error)\n            })\n    }\n\n    render() {\n \n            const {userMe, isLoading, cakeDescription} = this.state\n            return (\n                <Container>\n                    <OrderTable\n                        orders={userMe && userMe.orders}\n                        isLoading={isLoading}\n                        cakeDescription={cakeDescription}\n                        handleCreateCake={this.handleCreateCake}\n                        handleInputChange={this.handleInputChange}\n                    />\n                </Container>\n            )\n\n    }\n}\n\nexport default AddCake"]},"metadata":{},"sourceType":"module"}