{"ast":null,"code":"import _defineProperty from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{NavLink,Redirect}from'react-router-dom';import{Button,Form,Grid,Segment,Message}from'semantic-ui-react';import AuthContext from'../context/AuthContext';import{orderApi}from'../misc/OrderApi';import{parseJwt,handleLogError}from'../misc/Helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Login=/*#__PURE__*/function(_Component){_inherits(Login,_Component);var _super=_createSuper(Login);function Login(){var _this;_classCallCheck(this,Login);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:'',password:'',isLoggedIn:false,isError:false};_this.handleInputChange=function(e,_ref){var name=_ref.name,value=_ref.value;_this.setState(_defineProperty({},name,value));};_this.handleSubmit=function(e){e.preventDefault();var _this$state=_this.state,username=_this$state.username,password=_this$state.password;if(!(username&&password)){_this.setState({isError:true});return;}orderApi.authenticate(username,password).then(function(response){var accessToken=response.data.accessToken;var data=parseJwt(accessToken);var user={data:data,accessToken:accessToken};var Auth=_this.context;Auth.userLogin(user);_this.setState({username:'',password:'',isLoggedIn:true,isError:false});}).catch(function(error){handleLogError(error);_this.setState({isError:true});});};_this.getReferer=function(){var locationState=_this.props.location.state;return locationState&&locationState.referer?locationState.referer:'/';};return _this;}_createClass(Login,[{key:\"componentDidMount\",value:function componentDidMount(){var Auth=this.context;var isLoggedIn=Auth.userIsAuthenticated();this.setState({isLoggedIn:isLoggedIn});}},{key:\"render\",value:function render(){var _this$state2=this.state,isLoggedIn=_this$state2.isLoggedIn,isError=_this$state2.isError;var referer=this.getReferer();if(isLoggedIn){return/*#__PURE__*/_jsx(Redirect,{to:referer});}else{return/*#__PURE__*/_jsx(Grid,{textAlign:\"center\",children:/*#__PURE__*/_jsxs(Grid.Column,{style:{maxWidth:450},children:[/*#__PURE__*/_jsx(Form,{size:\"large\",onSubmit:this.handleSubmit,children:/*#__PURE__*/_jsxs(Segment,{children:[/*#__PURE__*/_jsx(Form.Input,{fluid:true,autoFocus:true,name:\"username\",icon:\"user\",iconPosition:\"left\",placeholder:\"Username\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"password\",icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Button,{color:\"violet\",fluid:true,size:\"large\",children:\"Login\"})]})}),/*#__PURE__*/_jsxs(Message,{children:[\"Don't have already an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/signup\",color:\"violet\",as:NavLink,to:\"/signup\",children:\"Sign Up\"})]}),isError&&/*#__PURE__*/_jsx(Message,{negative:true,children:\"The username or password provided are incorrect!\"})]})});}}}]);return Login;}(Component);Login.contextType=AuthContext;export default Login;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Login.js"],"names":["React","Component","NavLink","Redirect","Button","Form","Grid","Segment","Message","AuthContext","orderApi","parseJwt","handleLogError","Login","state","username","password","isLoggedIn","isError","handleInputChange","e","name","value","setState","handleSubmit","preventDefault","authenticate","then","response","accessToken","data","user","Auth","context","userLogin","catch","error","getReferer","locationState","props","location","referer","userIsAuthenticated","maxWidth","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../context/AuthContext'\nimport { orderApi } from '../misc/OrderApi'\nimport { parseJwt, handleLogError } from '../misc/Helpers'\n\nclass Login extends Component {\n  static contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    isLoggedIn: false,\n    isError: false\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password } = this.state\n    if (!(username && password)) {\n      this.setState({ isError: true })\n      return\n    }\n\n    orderApi.authenticate(username, password)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        this.setState({ isError: true })\n      })\n  }\n\n  getReferer = () => {\n    const locationState = this.props.location.state\n    return locationState && locationState.referer ? locationState.referer : '/'\n  }\n\n  render() {\n    const { isLoggedIn, isError } = this.state\n    const referer = this.getReferer()\n    if (isLoggedIn) {\n      return <Redirect to={referer} />\n    } else {\n      return (\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <Segment>\n                <Form.Input\n                  fluid\n                  autoFocus\n                  name='username'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  onChange={this.handleInputChange}\n                />\n                <Button color='violet' fluid size='large'>Login</Button>\n              </Segment>\n            </Form>\n            <Message>{`Don't have already an account? `}\n              <a href='/signup' color='violet' as={NavLink} to=\"/signup\">Sign Up</a>\n            </Message>\n            {isError && <Message negative>The username or password provided are incorrect!</Message>}\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default Login"]},"metadata":{},"sourceType":"module"}