{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/Download.js\";\nimport React, { Component } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport AuthContext from '../context/AuthContext';\nimport { cakeApi } from '../misc/CakeApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Download extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userMe: null,\n      isUser: true,\n      isLoading: false,\n      cakeDescription: '',\n      image: '',\n      title: '',\n      data: []\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleDownloadCakes = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isLoading: true\n      });\n      cakeApi.download(user).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement('a');\n        link.href = url;\n        link.setAttribute('download', 'file.pdf'); //or any other extension\n\n        document.body.appendChild(link);\n        link.click();\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.handleDownloadCakes();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nDownload.contextType = AuthContext;\nexport default Download;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/Download.js"],"names":["React","Component","Container","AuthContext","cakeApi","handleLogError","Download","state","userMe","isUser","isLoading","cakeDescription","image","title","data","handleInputChange","e","name","value","setState","handleDownloadCakes","Auth","context","user","getUser","download","then","response","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","click","catch","error","finally","componentDidMount","render","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,SAAR,QAAwB,mBAAxB;AACA,OAAOC,WAAP,MAAwB,wBAAxB;AACA,SAAQC,OAAR,QAAsB,iBAAtB;AACA,SAAQC,cAAR,QAA6B,iBAA7B;;;AAEA,MAAMC,QAAN,SAAuBL,SAAvB,CAAiC;AAAA;AAAA;AAAA,SAG7BM,KAH6B,GAGrB;AACJC,MAAAA,MAAM,EAAE,IADJ;AAEJC,MAAAA,MAAM,EAAE,IAFJ;AAGJC,MAAAA,SAAS,EAAE,KAHP;AAIJC,MAAAA,eAAe,EAAE,EAJb;AAKJC,MAAAA,KAAK,EAAE,EALH;AAMJC,MAAAA,KAAK,EAAE,EANH;AAOJC,MAAAA,IAAI,EAAE;AAPF,KAHqB;;AAAA,SAmB7BC,iBAnB6B,GAmBT,CAACC,CAAD,EAAI;AAACC,MAAAA,IAAD;AAAOC,MAAAA;AAAP,KAAJ,KAAsB;AACtC,WAAKC,QAAL,CAAc;AAAC,SAACF,IAAD,GAAQC;AAAT,OAAd;AACH,KArB4B;;AAAA,SAuB7BE,mBAvB6B,GAuBP,MAAM;AACxB,YAAMC,IAAI,GAAG,KAAKC,OAAlB;AACA,YAAMC,IAAI,GAAGF,IAAI,CAACG,OAAL,EAAb;AAEA,WAAKL,QAAL,CAAc;AAACT,QAAAA,SAAS,EAAE;AAAZ,OAAd;AACAN,MAAAA,OAAO,CAACqB,QAAR,CAAiBF,IAAjB,EACKG,IADL,CACUC,QAAQ,IAAI;AACd,cAAMC,GAAG,GAAGC,MAAM,CAACC,GAAP,CAAWC,eAAX,CAA2B,IAAIC,IAAJ,CAAS,CAACL,QAAQ,CAACb,IAAV,CAAT,CAA3B,CAAZ;AACA,cAAMmB,IAAI,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAAb;AACAF,QAAAA,IAAI,CAACG,IAAL,GAAYR,GAAZ;AACAK,QAAAA,IAAI,CAACI,YAAL,CAAkB,UAAlB,EAA8B,UAA9B,EAJc,CAI6B;;AAC3CH,QAAAA,QAAQ,CAACI,IAAT,CAAcC,WAAd,CAA0BN,IAA1B;AACAA,QAAAA,IAAI,CAACO,KAAL;AACH,OARL,EASKC,KATL,CASWC,KAAK,IAAI;AACZrC,QAAAA,cAAc,CAACqC,KAAD,CAAd;AACH,OAXL,EAYKC,OAZL,CAYa,MAAM;AACX,aAAKxB,QAAL,CAAc;AAACT,UAAAA,SAAS,EAAE;AAAZ,SAAd;AACH,OAdL;AAeH,KA3C4B;AAAA;;AAa7BkC,EAAAA,iBAAiB,GAAG;AAEhB,SAAKxB,mBAAL;AAEH;;AA4BDyB,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnD4B;;AAA3BvC,Q,CACKwC,W,GAAc3C,W;AAqDzB,eAAeG,QAAf","sourcesContent":["import React, {Component} from 'react'\nimport {Container} from 'semantic-ui-react'\nimport AuthContext from '../context/AuthContext'\nimport {cakeApi} from '../misc/CakeApi'\nimport {handleLogError} from '../misc/Helpers'\n\nclass Download extends Component {\n    static contextType = AuthContext\n\n    state = {\n        userMe: null,\n        isUser: true,\n        isLoading: false,\n        cakeDescription: '',\n        image: '',\n        title: '',\n        data: []\n    }\n\n    componentDidMount() {\n\n        this.handleDownloadCakes()\n\n    }\n\n    handleInputChange = (e, {name, value}) => {\n        this.setState({[name]: value})\n    }\n\n    handleDownloadCakes = () => {\n        const Auth = this.context\n        const user = Auth.getUser()\n\n        this.setState({isLoading: true})\n        cakeApi.download(user)\n            .then(response => {\n                const url = window.URL.createObjectURL(new Blob([response.data]));\n                const link = document.createElement('a');\n                link.href = url;\n                link.setAttribute('download', 'file.pdf'); //or any other extension\n                document.body.appendChild(link);\n                link.click();\n            })\n            .catch(error => {\n                handleLogError(error)\n            })\n            .finally(() => {\n                this.setState({isLoading: false})\n            })\n    }\n\n    render() {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n}\n\nexport default Download"]},"metadata":{},"sourceType":"module"}