{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Home.js\";\nimport React, { Component } from 'react';\nimport { Statistic, Icon, Grid, Container, Image, Segment, Dimmer, Loader } from 'semantic-ui-react';\nimport { cakeApi } from '../misc/CakeApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Home extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      numberOfUsers: 0,\n      numberOfOrders: 0,\n      isLoading: false\n    };\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    });\n\n    try {\n      let response = await cakeApi.numberOfUsers();\n      const numberOfUsers = response.data;\n      response = await cakeApi.numberOfOrders();\n      const numberOfOrders = response.data;\n      this.setState({\n        numberOfUsers,\n        numberOfOrders\n      });\n    } catch (error) {\n      handleLogError(error);\n    } finally {\n      this.setState({\n        isLoading: false\n      });\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Segment, {\n      basic: true,\n      style: {\n        marginTop: window.innerHeight / 2\n      },\n      children: /*#__PURE__*/_jsxDEV(Dimmer, {\n        active: true,\n        inverted: true,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          inverted: true,\n          size: \"huge\",\n          children: \"Loading\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Home;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Home.js"],"names":["React","Component","Statistic","Icon","Grid","Container","Image","Segment","Dimmer","Loader","cakeApi","handleLogError","Home","state","numberOfUsers","numberOfOrders","isLoading","componentDidMount","setState","response","data","error","render","marginTop","window","innerHeight"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,IAA1B,EAAgCC,SAAhC,EAA2CC,KAA3C,EAAkDC,OAAlD,EAA2DC,MAA3D,EAAmEC,MAAnE,QAAiF,mBAAjF;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,cAAT,QAA+B,iBAA/B;;;AAEA,MAAMC,IAAN,SAAmBX,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAC3BY,KAD2B,GACnB;AACNC,MAAAA,aAAa,EAAE,CADT;AAENC,MAAAA,cAAc,EAAE,CAFV;AAGNC,MAAAA,SAAS,EAAE;AAHL,KADmB;AAAA;;AAO3B,QAAMC,iBAAN,GAA0B;AACxB,SAAKC,QAAL,CAAc;AAAEF,MAAAA,SAAS,EAAE;AAAb,KAAd;;AACA,QAAI;AACF,UAAIG,QAAQ,GAAG,MAAMT,OAAO,CAACI,aAAR,EAArB;AACA,YAAMA,aAAa,GAAGK,QAAQ,CAACC,IAA/B;AAEAD,MAAAA,QAAQ,GAAG,MAAMT,OAAO,CAACK,cAAR,EAAjB;AACA,YAAMA,cAAc,GAAGI,QAAQ,CAACC,IAAhC;AAEA,WAAKF,QAAL,CAAc;AAAEJ,QAAAA,aAAF;AAAiBC,QAAAA;AAAjB,OAAd;AACD,KARD,CAQE,OAAOM,KAAP,EAAc;AACdV,MAAAA,cAAc,CAACU,KAAD,CAAd;AACD,KAVD,SAUU;AACR,WAAKH,QAAL,CAAc;AAAEF,QAAAA,SAAS,EAAE;AAAb,OAAd;AACD;AACF;;AAEDM,EAAAA,MAAM,GAAG;AAEL,wBACE,QAAC,OAAD;AAAS,MAAA,KAAK,MAAd;AAAe,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAEC,MAAM,CAACC,WAAP,GAAqB;AAAlC,OAAtB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,MAAM,MAAd;AAAe,QAAA,QAAQ,MAAvB;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,QAAQ,MAAhB;AAAiB,UAAA,IAAI,EAAC,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAQH;;AAlC0B;;AAqC7B,eAAeb,IAAf","sourcesContent":["import React, { Component } from 'react'\nimport { Statistic, Icon, Grid, Container, Image, Segment, Dimmer, Loader } from 'semantic-ui-react'\nimport { cakeApi } from '../misc/CakeApi'\nimport { handleLogError } from '../misc/Helpers'\n\nclass Home extends Component {\n  state = {\n    numberOfUsers: 0,\n    numberOfOrders: 0,\n    isLoading: false,\n  }\n\n  async componentDidMount() {\n    this.setState({ isLoading: true })\n    try {\n      let response = await cakeApi.numberOfUsers()\n      const numberOfUsers = response.data\n\n      response = await cakeApi.numberOfOrders()\n      const numberOfOrders = response.data\n\n      this.setState({ numberOfUsers, numberOfOrders })\n    } catch (error) {\n      handleLogError(error)\n    } finally {\n      this.setState({ isLoading: false })\n    }\n  }\n\n  render() {\n    \n      return (\n        <Segment basic style={{ marginTop: window.innerHeight / 2 }}>\n          <Dimmer active inverted>\n            <Loader inverted size='huge'>Loading</Loader>\n          </Dimmer>\n        </Segment>\n      )\n\n  }\n}\n\nexport default Home"]},"metadata":{},"sourceType":"module"}