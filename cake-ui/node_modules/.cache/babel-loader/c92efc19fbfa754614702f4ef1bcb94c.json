{"ast":null,"code":"import _defineProperty from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import{NavLink,Redirect}from'react-router-dom';import{Button,Form,Grid,Segment,Message}from'semantic-ui-react';import AuthContext from'../context/AuthContext';import{orderApi}from'../misc/OrderApi';import{parseJwt,handleLogError}from'../misc/Helpers';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Signup=/*#__PURE__*/function(_Component){_inherits(Signup,_Component);var _super=_createSuper(Signup);function Signup(){var _this;_classCallCheck(this,Signup);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={username:'',password:'',name:'',email:'',isLoggedIn:false,isError:false,errorMessage:''};_this.handleInputChange=function(e,_ref){var name=_ref.name,value=_ref.value;_this.setState(_defineProperty({},name,value));};_this.handleSubmit=function(e){e.preventDefault();var _this$state=_this.state,username=_this$state.username,password=_this$state.password,name=_this$state.name,email=_this$state.email;if(!(username&&password&&name&&email)){_this.setState({isError:true,errorMessage:'Please, inform all fields!'});return;}var user={username:username,password:password,name:name,email:email};orderApi.signup(user).then(function(response){var accessToken=response.data.accessToken;var data=parseJwt(accessToken);var user={data:data,accessToken:accessToken};var Auth=_this.context;Auth.userLogin(user);_this.setState({username:'',password:'',isLoggedIn:true,isError:false,errorMessage:''});}).catch(function(error){handleLogError(error);if(error.response&&error.response.data){var errorData=error.response.data;var errorMessage='Invalid fields';if(errorData.status===409){errorMessage=errorData.message;}else if(errorData.status===400){errorMessage=errorData.errors[0].defaultMessage;}_this.setState({isError:true,errorMessage:errorMessage});}});};return _this;}_createClass(Signup,[{key:\"componentDidMount\",value:function componentDidMount(){var Auth=this.context;var isLoggedIn=Auth.userIsAuthenticated();this.setState({isLoggedIn:isLoggedIn});}},{key:\"render\",value:function render(){var _this$state2=this.state,isLoggedIn=_this$state2.isLoggedIn,isError=_this$state2.isError,errorMessage=_this$state2.errorMessage;if(isLoggedIn){return/*#__PURE__*/_jsx(Redirect,{to:\"/\"});}else{return/*#__PURE__*/_jsx(Grid,{textAlign:\"center\",children:/*#__PURE__*/_jsxs(Grid.Column,{style:{maxWidth:450},children:[/*#__PURE__*/_jsx(Form,{size:\"large\",onSubmit:this.handleSubmit,children:/*#__PURE__*/_jsxs(Segment,{children:[/*#__PURE__*/_jsx(Form.Input,{fluid:true,autoFocus:true,name:\"username\",icon:\"user\",iconPosition:\"left\",placeholder:\"Username\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"password\",icon:\"lock\",iconPosition:\"left\",placeholder:\"Password\",type:\"password\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"name\",icon:\"address card\",iconPosition:\"left\",placeholder:\"Name\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Form.Input,{fluid:true,name:\"email\",icon:\"at\",iconPosition:\"left\",placeholder:\"Email\",onChange:this.handleInputChange}),/*#__PURE__*/_jsx(Button,{color:\"violet\",fluid:true,size:\"large\",children:\"Signup\"})]})}),/*#__PURE__*/_jsxs(Message,{children:[\"Already have an account? \",/*#__PURE__*/_jsx(\"a\",{href:\"/login\",color:\"violet\",as:NavLink,to:\"/login\",children:\"Login\"})]}),isError&&/*#__PURE__*/_jsx(Message,{negative:true,children:errorMessage})]})});}}}]);return Signup;}(Component);Signup.contextType=AuthContext;export default Signup;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/home/Signup.js"],"names":["React","Component","NavLink","Redirect","Button","Form","Grid","Segment","Message","AuthContext","orderApi","parseJwt","handleLogError","Signup","state","username","password","name","email","isLoggedIn","isError","errorMessage","handleInputChange","e","value","setState","handleSubmit","preventDefault","user","signup","then","response","accessToken","data","Auth","context","userLogin","catch","error","errorData","status","message","errors","defaultMessage","userIsAuthenticated","maxWidth","contextType"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { NavLink, Redirect } from 'react-router-dom'\nimport { Button, Form, Grid, Segment, Message } from 'semantic-ui-react'\nimport AuthContext from '../context/AuthContext'\nimport { orderApi } from '../misc/OrderApi'\nimport { parseJwt, handleLogError } from '../misc/Helpers'\n\nclass Signup extends Component {\n  static contextType = AuthContext\n\n  state = {\n    username: '',\n    password: '',\n    name: '',\n    email: '',\n    isLoggedIn: false,\n    isError: false,\n    errorMessage: ''\n  }\n\n  componentDidMount() {\n    const Auth = this.context\n    const isLoggedIn = Auth.userIsAuthenticated()\n    this.setState({ isLoggedIn })\n  }\n\n  handleInputChange = (e, {name, value}) => {\n    this.setState({ [name]: value })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault()\n\n    const { username, password, name, email } = this.state\n    if (!(username && password && name && email)) {\n      this.setState({\n        isError: true,\n        errorMessage: 'Please, inform all fields!'\n      })\n      return\n    }\n\n    const user = { username, password, name, email }\n    orderApi.signup(user)\n      .then(response => {\n        const { accessToken } = response.data\n        const data = parseJwt(accessToken)\n        const user = { data, accessToken }\n\n        const Auth = this.context\n        Auth.userLogin(user)\n\n        this.setState({\n          username: '',\n          password: '',\n          isLoggedIn: true,\n          isError: false,\n          errorMessage: ''\n        })\n      })\n      .catch(error => {\n        handleLogError(error)\n        if (error.response && error.response.data) {\n          const errorData = error.response.data\n          let errorMessage = 'Invalid fields'\n          if (errorData.status === 409) {\n            errorMessage = errorData.message\n          } else if (errorData.status === 400) {\n            errorMessage = errorData.errors[0].defaultMessage\n          }\n          this.setState({\n            isError: true,\n            errorMessage\n          })\n        }\n      })\n  }\n\n  render() {\n    const { isLoggedIn, isError, errorMessage } = this.state\n    if (isLoggedIn) {\n      return <Redirect to='/' />\n    } else {\n      return (\n        <Grid textAlign='center'>\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Form size='large' onSubmit={this.handleSubmit}>\n              <Segment>\n                <Form.Input\n                  fluid\n                  autoFocus\n                  name='username'\n                  icon='user'\n                  iconPosition='left'\n                  placeholder='Username'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='password'\n                  icon='lock'\n                  iconPosition='left'\n                  placeholder='Password'\n                  type='password'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='name'\n                  icon='address card'\n                  iconPosition='left'\n                  placeholder='Name'\n                  onChange={this.handleInputChange}\n                />\n                <Form.Input\n                  fluid\n                  name='email'\n                  icon='at'\n                  iconPosition='left'\n                  placeholder='Email'\n                  onChange={this.handleInputChange}\n                />\n                <Button color='violet' fluid size='large'>Signup</Button>\n              </Segment>\n            </Form>\n            <Message>{`Already have an account? `}\n              <a href='/login' color='violet' as={NavLink} to=\"/login\">Login</a>\n            </Message>\n            {isError && <Message negative>{errorMessage}</Message>}\n          </Grid.Column>\n        </Grid>\n      )\n    }\n  }\n}\n\nexport default Signup"]},"metadata":{},"sourceType":"module"}