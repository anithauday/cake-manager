{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/context/AuthContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component, useContext } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/React.createContext();\n\nclass AuthProvider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      user: null\n    };\n\n    this.getUser = () => {\n      return JSON.parse(localStorage.getItem('user'));\n    };\n\n    this.userIsAuthenticated = () => {\n      let user = localStorage.getItem('user');\n\n      if (!user) {\n        return false;\n      }\n\n      user = JSON.parse(user); // if user has token expired, logout user\n\n      if (Date.now() > user.data.exp * 1000) {\n        this.userLogout();\n        return false;\n      }\n\n      return true;\n    };\n\n    this.userLogin = user => {\n      localStorage.setItem('user', JSON.stringify(user));\n      this.setState({\n        user\n      });\n    };\n\n    this.userLogout = () => {\n      localStorage.removeItem('user');\n      this.setState({\n        user: null\n      });\n    };\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem('user');\n    this.setState({\n      user\n    });\n  }\n\n  render() {\n    const {\n      children\n    } = this.props;\n    const {\n      user\n    } = this.state;\n    const {\n      getUser,\n      userIsAuthenticated,\n      userLogin,\n      userLogout\n    } = this;\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: {\n        user,\n        getUser,\n        userIsAuthenticated,\n        userLogin,\n        userLogout\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default AuthContext;\nexport function useAuth() {\n  _s();\n\n  return useContext(AuthContext);\n}\n\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\n\nexport { AuthProvider };","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/context/AuthContext.js"],"names":["React","Component","useContext","AuthContext","createContext","AuthProvider","state","user","getUser","JSON","parse","localStorage","getItem","userIsAuthenticated","Date","now","data","exp","userLogout","userLogin","setItem","stringify","setState","removeItem","componentDidMount","render","children","props","useAuth"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,UAA3B,QAA6C,OAA7C;;AAEA,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAN,EAApB;;AAEA,MAAMC,YAAN,SAA2BJ,SAA3B,CAAqC;AAAA;AAAA;AAAA,SACnCK,KADmC,GAC3B;AACNC,MAAAA,IAAI,EAAE;AADA,KAD2B;;AAAA,SAUnCC,OAVmC,GAUzB,MAAM;AACd,aAAOC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX,CAAP;AACD,KAZkC;;AAAA,SAcnCC,mBAdmC,GAcb,MAAM;AAC1B,UAAIN,IAAI,GAAGI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAX;;AACA,UAAI,CAACL,IAAL,EAAW;AACT,eAAO,KAAP;AACD;;AACDA,MAAAA,IAAI,GAAGE,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP,CAL0B,CAO1B;;AACA,UAAIO,IAAI,CAACC,GAAL,KAAaR,IAAI,CAACS,IAAL,CAAUC,GAAV,GAAgB,IAAjC,EAAuC;AACrC,aAAKC,UAAL;AACA,eAAO,KAAP;AACD;;AACD,aAAO,IAAP;AACD,KA3BkC;;AAAA,SA6BnCC,SA7BmC,GA6BvBZ,IAAI,IAAI;AAClBI,MAAAA,YAAY,CAACS,OAAb,CAAqB,MAArB,EAA6BX,IAAI,CAACY,SAAL,CAAed,IAAf,CAA7B;AACA,WAAKe,QAAL,CAAc;AAAEf,QAAAA;AAAF,OAAd;AACD,KAhCkC;;AAAA,SAkCnCW,UAlCmC,GAkCtB,MAAM;AACjBP,MAAAA,YAAY,CAACY,UAAb,CAAwB,MAAxB;AACA,WAAKD,QAAL,CAAc;AAAEf,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KArCkC;AAAA;;AAKnCiB,EAAAA,iBAAiB,GAAG;AAClB,UAAMjB,IAAI,GAAGI,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAb;AACA,SAAKU,QAAL,CAAc;AAAEf,MAAAA;AAAF,KAAd;AACD;;AA+BDkB,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAe,KAAKC,KAA1B;AACA,UAAM;AAAEpB,MAAAA;AAAF,QAAW,KAAKD,KAAtB;AACA,UAAM;AAAEE,MAAAA,OAAF;AAAWK,MAAAA,mBAAX;AAAgCM,MAAAA,SAAhC;AAA2CD,MAAAA;AAA3C,QAA0D,IAAhE;AAEA,wBACE,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE;AAAEX,QAAAA,IAAF;AAAQC,QAAAA,OAAR;AAAiBK,QAAAA,mBAAjB;AAAsCM,QAAAA,SAAtC;AAAiDD,QAAAA;AAAjD,OAA7B;AAAA,gBACGQ;AADH;AAAA;AAAA;AAAA;AAAA,YADF;AAKD;;AAjDkC;;AAoDrC,eAAevB,WAAf;AAEA,OAAO,SAASyB,OAAT,GAAmB;AAAA;;AACxB,SAAO1B,UAAU,CAACC,WAAD,CAAjB;AACD;;GAFeyB,O;;AAIhB,SAASvB,YAAT","sourcesContent":["import React, { Component, useContext } from 'react'\n\nconst AuthContext = React.createContext()\n\nclass AuthProvider extends Component {\n  state = {\n    user: null\n  }\n\n  componentDidMount() {\n    const user = localStorage.getItem('user')\n    this.setState({ user })\n  }\n\n  getUser = () => {\n    return JSON.parse(localStorage.getItem('user'))\n  }\n\n  userIsAuthenticated = () => {\n    let user = localStorage.getItem('user')\n    if (!user) {\n      return false\n    }\n    user = JSON.parse(user)\n    \n    // if user has token expired, logout user\n    if (Date.now() > user.data.exp * 1000) {\n      this.userLogout()\n      return false\n    }\n    return true\n  }\n\n  userLogin = user => {\n    localStorage.setItem('user', JSON.stringify(user))\n    this.setState({ user })\n  }\n\n  userLogout = () => {\n    localStorage.removeItem('user')\n    this.setState({ user: null })\n  }\n\n  render() {\n    const { children } = this.props\n    const { user } = this.state\n    const { getUser, userIsAuthenticated, userLogin, userLogout } = this\n\n    return (\n      <AuthContext.Provider value={{ user, getUser, userIsAuthenticated, userLogin, userLogout, }}>\n        {children}\n      </AuthContext.Provider>\n    )\n  }\n}\n\nexport default AuthContext\n\nexport function useAuth() {\n  return useContext(AuthContext)\n}\n\nexport { AuthProvider }"]},"metadata":{},"sourceType":"module"}