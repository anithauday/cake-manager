{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Container } from 'semantic-ui-react';\nimport OrderTable from './OrderTable';\nimport AuthContext from '../context/AuthContext';\nimport { cakeApi } from '../misc/CakeApi';\nimport { handleLogError } from '../misc/Helpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass AddCake extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      userMe: null,\n      isUser: true,\n      isLoading: false,\n      cakeDescription: '',\n      image: '',\n      title: ''\n    };\n\n    this.handleInputChange = (e, {\n      name,\n      value\n    }) => {\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleGetCakes = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      this.setState({\n        isLoading: true\n      });\n      cakeApi.getCakes(user).then(response => {\n        alert(response.data);\n        this.setState({\n          userMe: response.data\n        });\n      }).catch(error => {\n        handleLogError(error);\n      }).finally(() => {\n        this.setState({\n          isLoading: false\n        });\n      });\n    };\n\n    this.handleCreateCake = () => {\n      const Auth = this.context;\n      const user = Auth.getUser();\n      let {\n        cakeDescription\n      } = this.state;\n      let {\n        image\n      } = this.state;\n      let {\n        title\n      } = this.state;\n      cakeDescription = cakeDescription.trim();\n      image = image.trim();\n      title = title.trim();\n      const cake = {\n        description: cakeDescription,\n        image: image,\n        title: title\n      };\n      cakeApi.createCake(user, cake).then(() => {\n        this.handleGetCakes();\n        this.setState({\n          cakeDescription: '',\n          title: '',\n          image: ''\n        });\n      }).catch(error => {\n        handleLogError(error);\n      });\n    };\n  }\n\n  componentDidMount() {\n    const Auth = this.context;\n    const user = Auth.getUser();\n    const isUser = user.data.rol[0] === 'USER';\n    this.setState({\n      isUser\n    });\n  }\n\n  render() {\n    if (!this.state.isUser) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 20\n      }, this);\n    } else {\n      const {\n        userMe,\n        isLoading,\n        cakeDescription\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(OrderTable, {\n          orders: userMe && userMe.orders,\n          isLoading: isLoading,\n          cakeDescription: cakeDescription,\n          handleCreateCake: this.handleCreateCake,\n          handleInputChange: this.handleInputChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this);\n    }\n  }\n\n}\n\nAddCake.contextType = AuthContext;\nexport default AddCake;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/user/AddCake.js"],"names":["React","Component","Redirect","Container","OrderTable","AuthContext","cakeApi","handleLogError","AddCake","state","userMe","isUser","isLoading","cakeDescription","image","title","handleInputChange","e","name","value","setState","handleGetCakes","Auth","context","user","getUser","getCakes","then","response","alert","data","catch","error","finally","handleCreateCake","trim","cake","description","createCake","componentDidMount","rol","render","orders","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport {Redirect} from 'react-router-dom'\nimport {Container} from 'semantic-ui-react'\nimport OrderTable from './OrderTable'\nimport AuthContext from '../context/AuthContext'\nimport {cakeApi} from '../misc/CakeApi'\nimport {handleLogError} from '../misc/Helpers'\n\nclass AddCake extends Component {\n    static contextType = AuthContext\n\n    state = {\n        userMe: null,\n        isUser: true,\n        isLoading: false,\n        cakeDescription: '',\n        image: '',\n        title: ''\n    }\n\n    componentDidMount() {\n        const Auth = this.context\n        const user = Auth.getUser()\n        const isUser = user.data.rol[0] === 'USER'\n        this.setState({isUser})\n\n    }\n\n    handleInputChange = (e, {name, value}) => {\n        this.setState({[name]: value})\n    }\n\n    handleGetCakes = () => {\n        const Auth = this.context\n        const user = Auth.getUser()\n\n        this.setState({isLoading: true})\n        cakeApi.getCakes(user)\n            .then(response => {\n              alert(response.data)\n                this.setState({userMe: response.data})\n            })\n            .catch(error => {\n                handleLogError(error)\n            })\n            .finally(() => {\n                this.setState({isLoading: false})\n            })\n    }\n    handleCreateCake = () => {\n        const Auth = this.context\n        const user = Auth.getUser()\n\n        let {cakeDescription} = this.state\n        let {image} = this.state\n        let {title} = this.state\n\n        cakeDescription = cakeDescription.trim()\n        image = image.trim()\n        title = title.trim()\n\n        const cake = {description: cakeDescription, image: image, title: title}\n        cakeApi.createCake(user, cake)\n            .then(() => {\n                this.handleGetCakes()\n                this.setState({cakeDescription: '', title: '', image: ''})\n            })\n            .catch(error => {\n                handleLogError(error)\n            })\n    }\n\n    render() {\n        if (!this.state.isUser) {\n            return <Redirect to='/'/>\n        } else {\n            const {userMe, isLoading, cakeDescription} = this.state\n            return (\n                <Container>\n                    <OrderTable\n                        orders={userMe && userMe.orders}\n                        isLoading={isLoading}\n                        cakeDescription={cakeDescription}\n                        handleCreateCake={this.handleCreateCake}\n                        handleInputChange={this.handleInputChange}\n                    />\n                </Container>\n            )\n        }\n    }\n}\n\nexport default AddCake"]},"metadata":{},"sourceType":"module"}