{"ast":null,"code":"import axios from 'axios';\nimport { config } from '../../Constants';\nimport { parseJwt } from './Helpers';\nexport const orderApi = {\n  authenticate,\n  signup,\n  numberOfUsers,\n  numberOfOrders,\n  getUsers,\n  deleteUser,\n  getOrders,\n  deleteOrder,\n  createOrder,\n  getUserMe\n};\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/login', {\n    username,\n    password\n  }, {\n    headers: {\n      'Content-type': 'application/json',\n      \"Access-Control-Allow-Origin\": \"'http://localhost:3000\",\n      \"Access-Control-Allow-Headers\": \"X-Requested-With\"\n    }\n  }).then(res => {\n    console.log(\"RESPONSE RECEIVED: \", res);\n  });\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers');\n}\n\nfunction numberOfOrders() {\n  return instance.get('/public/numberOfOrders');\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users';\n  return instance.get(url, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction getOrders(user, text) {\n  const url = text ? `/api/orders?text=${text}` : '/api/orders';\n  return instance.get(url, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction deleteOrder(user, orderId) {\n  return instance.delete(`/api/orders/${orderId}`, {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction createOrder(user, order) {\n  return instance.post('/api/orders', order, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': bearerAuth(user)\n    }\n  });\n}\n\nfunction getUserMe(user) {\n  return instance.get('/api/users/me', {\n    headers: {\n      'Authorization': bearerAuth(user)\n    }\n  });\n} // -- Axios\n\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n});\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1];\n    const data = parseJwt(token);\n\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\";\n    }\n  }\n\n  return config;\n}, function (error) {\n  return Promise.reject(error);\n}); // -- Helper functions\n\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`;\n}","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/misc/OrderApi.js"],"names":["axios","config","parseJwt","orderApi","authenticate","signup","numberOfUsers","numberOfOrders","getUsers","deleteUser","getOrders","deleteOrder","createOrder","getUserMe","username","password","instance","post","headers","then","res","console","log","user","get","url","bearerAuth","delete","text","orderId","order","create","baseURL","API_BASE_URL","interceptors","request","use","Authorization","token","split","data","Date","now","exp","window","location","href","error","Promise","reject","accessToken"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { config } from '../../Constants'\nimport { parseJwt } from './Helpers'\n\nexport const orderApi = {\n  authenticate,\n  signup,\n  numberOfUsers,\n  numberOfOrders,\n  getUsers,\n  deleteUser,\n  getOrders,\n  deleteOrder,\n  createOrder,\n  getUserMe\n}\n\nfunction authenticate(username, password) {\n  return instance.post('/auth/login', { username, password }, {\n    headers: { 'Content-type': 'application/json' , \"Access-Control-Allow-Origin\": \"'http://localhost:3000\",\"Access-Control-Allow-Headers\": \"X-Requested-With\",}\n  }).then((res) => {\n    console.log(\"RESPONSE RECEIVED: \", res);\n  })\n}\n\nfunction signup(user) {\n  return instance.post('/auth/signup', user, {\n    headers: { 'Content-type': 'application/json' }\n  })\n}\n\nfunction numberOfUsers() {\n  return instance.get('/public/numberOfUsers')\n}\n\nfunction numberOfOrders() {\n  return instance.get('/public/numberOfOrders')\n}\n\nfunction getUsers(user, username) {\n  const url = username ? `/api/users/${username}` : '/api/users'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteUser(user, username) {\n  return instance.delete(`/api/users/${username}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction getOrders(user, text) {\n  const url = text ? `/api/orders?text=${text}` : '/api/orders'\n  return instance.get(url, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction deleteOrder(user, orderId) {\n  return instance.delete(`/api/orders/${orderId}`, {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\nfunction createOrder(user, order) {\n  return instance.post('/api/orders', order, {\n    headers: {\n      'Content-type': 'application/json',\n      'Authorization': bearerAuth(user)\n    }\n  })\n}\n\nfunction getUserMe(user) {\n  return instance.get('/api/users/me', {\n    headers: { 'Authorization': bearerAuth(user) }\n  })\n}\n\n// -- Axios\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n})\n\ninstance.interceptors.request.use(function (config) {\n  // If token is expired, redirect user to login\n  if (config.headers.Authorization) {\n    const token = config.headers.Authorization.split(' ')[1]\n    const data = parseJwt(token)\n    if (Date.now() > data.exp * 1000) {\n      window.location.href = \"/login\"\n    }\n  }\n  return config\n}, function (error) {\n  return Promise.reject(error)\n})\n\n// -- Helper functions\n\nfunction bearerAuth(user) {\n  return `Bearer ${user.accessToken}`\n}"]},"metadata":{},"sourceType":"module"}