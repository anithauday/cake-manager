{"ast":null,"code":"var _jsxFileName = \"/Users/baran/Desktop/cake-manager/cake-ui/src/components/admin/OrderTable.js\";\nimport React from 'react';\nimport { Grid, Form, Button, Input, Table } from 'semantic-ui-react';\nimport OrderForm from '../misc/OrderForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction OrderTable({\n  orders,\n  orderDescription,\n  orderTextSearch,\n  handleInputChange,\n  handleCreateOrder,\n  handleDeleteOrder,\n  handleSearchOrder\n}) {\n  let orderList;\n\n  if (orders.length === 0) {\n    orderList = /*#__PURE__*/_jsxDEV(Table.Row, {\n      children: /*#__PURE__*/_jsxDEV(Table.Cell, {\n        collapsing: true,\n        textAlign: \"center\",\n        colSpan: \"5\",\n        children: \"No order\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this)\n    }, 'no-order', false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  } else {\n    orderList = orders.map(order => {\n      return /*#__PURE__*/_jsxDEV(Table.Row, {\n        children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n          collapsing: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            circular: true,\n            color: \"red\",\n            size: \"small\",\n            icon: \"trash\",\n            onClick: () => handleDeleteOrder(order.id)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: order.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: order.user.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: order.createdAt\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n          children: order.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)]\n      }, order.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      stackable: true,\n      divided: true,\n      children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n        columns: \"2\",\n        children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n          width: \"5\",\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            onSubmit: handleSearchOrder,\n            children: /*#__PURE__*/_jsxDEV(Input, {\n              action: {\n                icon: 'search'\n              },\n              name: \"orderTextSearch\",\n              placeholder: \"Search by Id or Description\",\n              value: orderTextSearch,\n              onChange: handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n          children: /*#__PURE__*/_jsxDEV(OrderForm, {\n            orderDescription: orderDescription,\n            handleInputChange: handleInputChange,\n            handleCreateOrder: handleCreateOrder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      compact: true,\n      striped: true,\n      selectable: true,\n      children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n        children: /*#__PURE__*/_jsxDEV(Table.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            width: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            width: 5,\n            children: \"ID\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            width: 2,\n            children: \"Username\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            width: 4,\n            children: \"Created At\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n            width: 4,\n            children: \"Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n        children: orderList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = OrderTable;\nexport default OrderTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderTable\");","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/admin/OrderTable.js"],"names":["React","Grid","Form","Button","Input","Table","OrderForm","OrderTable","orders","orderDescription","orderTextSearch","handleInputChange","handleCreateOrder","handleDeleteOrder","handleSearchOrder","orderList","length","map","order","id","user","username","createdAt","description","icon"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,IAAf,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoCC,KAApC,QAAiD,mBAAjD;AACA,OAAOC,SAAP,MAAsB,mBAAtB;;;;AAEA,SAASC,UAAT,CAAoB;AAAEC,EAAAA,MAAF;AAAUC,EAAAA,gBAAV;AAA4BC,EAAAA,eAA5B;AAA6CC,EAAAA,iBAA7C;AAAgEC,EAAAA,iBAAhE;AAAmFC,EAAAA,iBAAnF;AAAsGC,EAAAA;AAAtG,CAApB,EAA+I;AAC7I,MAAIC,SAAJ;;AACA,MAAIP,MAAM,CAACQ,MAAP,KAAkB,CAAtB,EAAyB;AACvBD,IAAAA,SAAS,gBACP,QAAC,KAAD,CAAO,GAAP;AAAA,6BACE,QAAC,KAAD,CAAO,IAAP;AAAY,QAAA,UAAU,MAAtB;AAAuB,QAAA,SAAS,EAAC,QAAjC;AAA0C,QAAA,OAAO,EAAC,GAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,OAAe,UAAf;AAAA;AAAA;AAAA;AAAA,YADF;AAKD,GAND,MAMO;AACLA,IAAAA,SAAS,GAAGP,MAAM,CAACS,GAAP,CAAWC,KAAK,IAAI;AAC9B,0BACE,QAAC,KAAD,CAAO,GAAP;AAAA,gCACE,QAAC,KAAD,CAAO,IAAP;AAAY,UAAA,UAAU,MAAtB;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,QAAQ,MADV;AAEE,YAAA,KAAK,EAAC,KAFR;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,OAAO,EAAE,MAAML,iBAAiB,CAACK,KAAK,CAACC,EAAP;AALlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA,oBAAaD,KAAK,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAVF,eAWE,QAAC,KAAD,CAAO,IAAP;AAAA,oBAAaD,KAAK,CAACE,IAAN,CAAWC;AAAxB;AAAA;AAAA;AAAA;AAAA,gBAXF,eAYE,QAAC,KAAD,CAAO,IAAP;AAAA,oBAAaH,KAAK,CAACI;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAZF,eAaE,QAAC,KAAD,CAAO,IAAP;AAAA,oBAAaJ,KAAK,CAACK;AAAnB;AAAA;AAAA;AAAA;AAAA,gBAbF;AAAA,SAAgBL,KAAK,CAACC,EAAtB;AAAA;AAAA;AAAA;AAAA,cADF;AAiBD,KAlBW,CAAZ;AAmBD;;AAED,sBACE;AAAA,4BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAgB,MAAA,OAAO,MAAvB;AAAA,6BACE,QAAC,IAAD,CAAM,GAAN;AAAU,QAAA,OAAO,EAAC,GAAlB;AAAA,gCACE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,KAAK,EAAC,GAAnB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,QAAQ,EAAEL,iBAAhB;AAAA,mCACE,QAAC,KAAD;AACE,cAAA,MAAM,EAAE;AAAEU,gBAAAA,IAAI,EAAE;AAAR,eADV;AAEE,cAAA,IAAI,EAAC,iBAFP;AAGE,cAAA,WAAW,EAAC,6BAHd;AAIE,cAAA,KAAK,EAAEd,eAJT;AAKE,cAAA,QAAQ,EAAEC;AALZ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE,QAAC,IAAD,CAAM,MAAN;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,gBAAgB,EAAEF,gBADpB;AAEE,YAAA,iBAAiB,EAAEE,iBAFrB;AAGE,YAAA,iBAAiB,EAAEC;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAuBE,QAAC,KAAD;AAAO,MAAA,OAAO,MAAd;AAAe,MAAA,OAAO,MAAtB;AAAuB,MAAA,UAAU,MAAjC;AAAA,8BACE,QAAC,KAAD,CAAO,MAAP;AAAA,+BACE,QAAC,KAAD,CAAO,GAAP;AAAA,kCACE,QAAC,KAAD,CAAO,UAAP;AAAkB,YAAA,KAAK,EAAE;AAAzB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,KAAD,CAAO,UAAP;AAAkB,YAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,KAAD,CAAO,UAAP;AAAkB,YAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF,eAIE,QAAC,KAAD,CAAO,UAAP;AAAkB,YAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF,eAKE,QAAC,KAAD,CAAO,UAAP;AAAkB,YAAA,KAAK,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAUE,QAAC,KAAD,CAAO,IAAP;AAAA,kBACGG;AADH;AAAA;AAAA;AAAA;AAAA,cAVF;AAAA;AAAA;AAAA;AAAA;AAAA,YAvBF;AAAA,kBADF;AAwCD;;KAtEQR,U;AAwET,eAAeA,UAAf","sourcesContent":["import React from 'react'\nimport { Grid, Form, Button, Input, Table } from 'semantic-ui-react'\nimport OrderForm from '../misc/OrderForm'\n\nfunction OrderTable({ orders, orderDescription, orderTextSearch, handleInputChange, handleCreateOrder, handleDeleteOrder, handleSearchOrder }) {\n  let orderList\n  if (orders.length === 0) {\n    orderList = (\n      <Table.Row key='no-order'>\n        <Table.Cell collapsing textAlign='center' colSpan='5'>No order</Table.Cell>\n      </Table.Row>\n    )\n  } else {\n    orderList = orders.map(order => {\n      return (\n        <Table.Row key={order.id}>\n          <Table.Cell collapsing>\n            <Button\n              circular\n              color='red'\n              size='small'\n              icon='trash'\n              onClick={() => handleDeleteOrder(order.id)}\n            />\n          </Table.Cell>\n          <Table.Cell>{order.id}</Table.Cell>\n          <Table.Cell>{order.user.username}</Table.Cell>\n          <Table.Cell>{order.createdAt}</Table.Cell>\n          <Table.Cell>{order.description}</Table.Cell>\n        </Table.Row>\n      )\n    })\n  }\n\n  return (\n    <>\n      <Grid stackable divided>\n        <Grid.Row columns='2'>\n          <Grid.Column width='5'>\n            <Form onSubmit={handleSearchOrder}>\n              <Input\n                action={{ icon: 'search' }}\n                name='orderTextSearch'\n                placeholder='Search by Id or Description'\n                value={orderTextSearch}\n                onChange={handleInputChange}\n              />\n            </Form>\n          </Grid.Column>\n          <Grid.Column>\n            <OrderForm\n              orderDescription={orderDescription}\n              handleInputChange={handleInputChange}\n              handleCreateOrder={handleCreateOrder}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n      <Table compact striped selectable>\n        <Table.Header>\n          <Table.Row>\n            <Table.HeaderCell width={1}/>\n            <Table.HeaderCell width={5}>ID</Table.HeaderCell>\n            <Table.HeaderCell width={2}>Username</Table.HeaderCell>\n            <Table.HeaderCell width={4}>Created At</Table.HeaderCell>\n            <Table.HeaderCell width={4}>Description</Table.HeaderCell>\n          </Table.Row>\n        </Table.Header>\n        <Table.Body>\n          {orderList}\n        </Table.Body>\n      </Table>\n    </>\n  )\n}\n\nexport default OrderTable"]},"metadata":{},"sourceType":"module"}