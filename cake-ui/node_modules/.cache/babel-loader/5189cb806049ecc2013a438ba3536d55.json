{"ast":null,"code":"import _objectSpread from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _objectWithoutProperties from\"/Users/baran/Desktop/cake-manager/cake-ui/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";import React from'react';import{Route,Redirect}from'react-router-dom';import{useAuth}from'../context/AuthContext';import{jsx as _jsx}from\"react/jsx-runtime\";function PrivateRoute(_ref){var Component=_ref.component,rest=_objectWithoutProperties(_ref,[\"component\"]);var _useAuth=useAuth(),userIsAuthenticated=_useAuth.userIsAuthenticated;return/*#__PURE__*/_jsx(Route,_objectSpread(_objectSpread({},rest),{},{render:function render(props){return userIsAuthenticated()?/*#__PURE__*/_jsx(Component,_objectSpread({},props)):/*#__PURE__*/_jsx(Redirect,{to:{pathname:'/login',state:{referer:props.location}}});}}));}export default PrivateRoute;","map":{"version":3,"sources":["/Users/baran/Desktop/cake-manager/cake-ui/src/components/misc/PrivateRoute.js"],"names":["React","Route","Redirect","useAuth","PrivateRoute","Component","component","rest","userIsAuthenticated","props","pathname","state","referer","location"],"mappings":"mVAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,CACA,OAASC,KAAT,CAAgBC,QAAhB,KAAgC,kBAAhC,CACA,OAASC,OAAT,KAAwB,wBAAxB,C,2CAEA,QAASC,CAAAA,YAAT,MAAyD,IAAtBC,CAAAA,SAAsB,MAAjCC,SAAiC,CAARC,IAAQ,2DACvBJ,OAAO,EADgB,CAC/CK,mBAD+C,UAC/CA,mBAD+C,CAGvD,mBAAO,KAAC,KAAD,gCAAWD,IAAX,MAAiB,MAAM,CAAE,gBAAAE,KAAK,QACnCD,CAAAA,mBAAmB,gBACf,KAAC,SAAD,kBAAeC,KAAf,EADe,cAEf,KAAC,QAAD,EAAU,EAAE,CAAE,CAAEC,QAAQ,CAAE,QAAZ,CAAsBC,KAAK,CAAE,CAAEC,OAAO,CAAEH,KAAK,CAACI,QAAjB,CAA7B,CAAd,EAH+B,EAA9B,GAAP,CAKD,CAED,cAAeT,CAAAA,YAAf","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport { useAuth } from '../context/AuthContext'\n\nfunction PrivateRoute({ component: Component, ...rest }) {\n  const { userIsAuthenticated } = useAuth()\n\n  return <Route {...rest} render={props => (\n    userIsAuthenticated()\n      ? <Component {...props} />\n      : <Redirect to={{ pathname: '/login', state: { referer: props.location } }} />\n  )} />\n}\n\nexport default PrivateRoute"]},"metadata":{},"sourceType":"module"}